#!/usr/bin/ruby
# encoding: utf-8

require 'thor'
require 'rainbow'
#require 'pry-byebug'
require_relative 'lib/application'
require_relative 'lib/project'
require_relative 'lib/command/version'
require_relative 'lib/command/create'

# Command Line User Interface
class ProjectCLI < Thor

  map ['h', '-h', '--help'] => 'help'

  map ['l', '-l', '--lab'] => 'lab'
  desc 'lab PATH/TO/FILE/FOO.rb', 'Show laboratory script objectives on screen'
  option :r, :type => :boolean
  option :c, :type => :boolean
  long_desc <<-LONGDESC


  #{$PROGRAM_NAME} lab path/to/foo.rb
  , Show DSL information from <path/to/foo.rb>

  #{$PROGRAM_NAME} lab path/to/foo.rb -c
  , Revise config information from <path/to/foo.yaml>

  #{$PROGRAM_NAME} lab path/to/foo.rb -r
  , Show only requests information from  <path/to/foo.rb>


LONGDESC
  def lab(path_to_rb_file)
    Project.laboratory(path_to_rb_file, options)
  end

  map ['p', '-p', 'play', '--play'] => 'play'
  desc 'run PATH/TO/FILE/FOO.rb', 'Run activity script file'
  long_desc <<-LONGDESC

  SIMPLE MODE: Run tests from check/demo/foo.rb.

  Example: #{$PROGRAM_NAME} challenges/demo/foo.rb

  COMPLEX MODE: Run tests from challenges/demo/foo/start.rb.

  Example: #{$PROGRAM_NAME} challenges/demo/foo

LONGDESC
  def play(path_to_rb_file)
    Project.run(path_to_rb_file)
  end

  def method_missing(m, *_args, &_block)
    play(m.to_s)
  end

  def respond_to_missing?(method_name, include_private = false)
    super
  end
end

ProjectCLI.start(ARGV)
