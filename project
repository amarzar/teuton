#!/usr/bin/ruby
# encoding: utf-8

require 'pry-byebug'
require 'rainbow'
require_relative 'lib/application'
require_relative 'lib/project'

def show_help
  p = %{Usage:  #{$PROGRAM_NAME} OPTIONS
Options:
\t#{Rainbow('create PATH/TO/FILE/FOO').bright} => Create new FOO project.
\t#{' ' * 27}Example: #{$PROGRAM_NAME} create check/demo/foo
\t#{Rainbow('lab    PATH/TO/FILE/FOO').bright} => Show laboratory script objectives on screen.
\t#{' ' * 27}Example: #{$PROGRAM_NAME} lab check/demo/foo.rb
\t#{Rainbow('help').bright}#{' ' * 20}=> Show this help.
\t#{Rainbow('version').bright}#{' ' * 17}=> Show the program version.
\t#{Rainbow('PATH/TO/FILE.rb').bright}#{' ' * 9}=> Run activity script file.
\t#{' ' * 27}Example: #{$PROGRAM_NAME} check/demo/foor.rb
\n
}
  puts p
end

def show_version
  app = Application.instance
  t = "#{Rainbow(app.name).color(:green)}" \
      " (version #{Rainbow(app.version).color(:blue)})"
  puts t
end

if ARGV.count.zero?
  puts "Usage: #{$PROGRAM_NAME} help"
elsif ['h', '-h', 'help', '--help'].include?(ARGV.first)
  show_help
elsif ['v', '-v', 'version', '--version'].include?(ARGV[0])
  show_version
elsif ['c', '-c', 'create', '--create'].include?(ARGV[0])
  Project.create(ARGV[1])
elsif ['l', '-l', 'lab', '--lab'].include?(ARGV[0])
  Project.laboratory(ARGV[1])
else
  Project.run(ARGV.first)
end
